#textdomain wesnoth-AD

#define AD_ACHIEVEMENT ID
    [set_achievement]
        content_for=AD_Achievements
        id={ID}
    [/set_achievement]
#enddef

#define MARAUDER_ACH ACH_ID
    [event]
    name=victory

        [if]
            [not]
                [have_location]
                    terrain=Ce,Ch,*^Vh,*^Vhc,*^Vhh 
                [/have_location]
            [/not]
        [then]
            {AD_ACHIEVEMENT {ACH_ID}}
        [/then]
        [/if]
    [/event]
#enddef

#define PEASANT_SIDE SIDE
    [side]
        side={SIDE}
        controller=ai
        gold=0
        income=0
        fog=no
        shroud=no
        share_vision=all
        no_leader=yes
        hidden=yes
        color=brown
        team_name=rebels
        user_team_name= _ "Peasants"
    [/side]
#enddef

#define AD_CAPTURE_EVENT SIDE 
    [event]
        name=capture 
        first_time_only=no 
        [filter]
            race=orc,goblin,wolf,troll
            [filter_location]
                terrain=*^Vh
                [or]
                    terrain=*^Vc
                [/or]
                [or]
                    terrain=*^Vl
                [/or]
                [or]
                    terrain=*^Vhh
                [/or]
                [or]
                    terrain=*^Vhc
                [/or]
            [/filter_location]
        [/filter]
        
        [sound]
            name=torch.ogg 
        [/sound]
        
        # can't use other random functions, because they prevent undo
        # instead, we set villager=10 (synced), and then randomly set it (unsynced)
        {VARIABLE villager 10}
        [lua]
            code=<< wml.variables['villager'] = math.random(1,10) >>
        [/lua]
        [if]
            {VARIABLE_CONDITIONAL villager less_than_equal_to 4}
            [then]
                # use do_command to convert this to a synced context so that replays don't break
                [do_command]
                    [fire_event]
                        raise=trigger_village_rebellion
                        [source]
                            x,y=$x1,$y1
                        [/source]
                    [/fire_event]
                [/do_command]
            [/then]
            [else]
                [allow_undo]
                [/allow_undo]
            [/else]
        [/if]
        {CLEAR_VARIABLE villager}
    [/event]
    
    [event]
        name=trigger_village_rebellion
        first_time_only=no
        [floating_text]
            x,y=$x1,$y1
            text="<span color='#FF0000'>" + _ "Rebellion!" + "</span>"
        [/floating_text]
        {VARIABLE_OP villager_type rand {ON_DIFFICULTY "Peasant,Ruffian,Woodsman" "Peasant,Ruffian,Woodsman,Thug_Peasant" "Peasant,Ruffian,Woodsman,Footpad_Peasant,Poacher_Peasant,Thug_Peasant"}}
        [unit]
            side={SIDE}
            type=$villager_type
            x,y=$x1,$y1 
            name=_ "Angry villager"
            animate=yes 
            random_traits=yes 
        [/unit]
        {CLEAR_VARIABLE villager_type}
    [/event]
#enddef

#define AD_MARAUDERS
# 
#     [event]
#     name=moveto,unit placed
#     first_time_only=no 
# 
#         [filter]
#             race=orc,goblin,wolf,troll
#             [filter_location]
#                 terrain=*^Vh
#             [/filter_location]
#         [/filter]
#         
#         [terrain]
#             x,y=$x1,$y1 
#             terrain=^Vhr 
#             layer=overlay
#         [/terrain]
#     [/event]
# 
#     [event]
#     name=moveto,unit placed
#     first_time_only=no 
# 
#         [filter]
#             race=orc,goblin,wolf,troll
#             [filter_location]
#                 terrain=*^Vhh
#             [/filter_location]
#         [/filter]
#         
#         [terrain]
#             x,y=$x1,$y1 
#             terrain=^Vhhr
#             layer=overlay
#         [/terrain]
#     [/event]
# 
#     [event]
#     name=moveto,unit placed
#     first_time_only=no 
# 
#         [filter]
#             race=orc,goblin,wolf,troll
#             [filter_location]
#                 terrain=*^Vhc
#             [/filter_location]
#         [/filter]
#         
#         [terrain]
#             x,y=$x1,$y1 
#             terrain=^Vhcr 
#             layer=overlay
#         [/terrain]
#     [/event]
# 
#     [event]
#     name=moveto,unit placed
#     first_time_only=no 
# 
#         [filter]
#             race=orc,goblin,wolf,troll
#             [filter_location]
#                 terrain=Ce
#             [/filter_location]
#         [/filter]
# 
#         [sound]
#             name=cave-in.ogg
#         [/sound]
# 
#         [terrain]
#             x,y=$x1,$y1 
#             terrain=Cer
#         [/terrain]
#     [/event]
# 
#     [event]
#     name=moveto,unit placed
#     first_time_only=no 
# 
#         [filter]
#             race=orc,goblin,wolf,troll
#             [filter_location]
#                 terrain=Ch
#             [/filter_location]
#         [/filter]
# 
#         [sound]
#             name=cave-in.ogg
#         [/sound]
# 
#         [terrain]
#             x,y=$x1,$y1 
#             terrain=Chr
#         [/terrain]
#     [/event]
# 
#     [event]
#     name=moveto,unit placed
#     first_time_only=no 
# 
#         [filter]
#             race=orc,goblin,wolf,troll
#             [filter_location]
#                 terrain=Kh
#             [/filter_location]
#         [/filter]
# 
#         [sound]
#             name=cave-in.ogg
#         [/sound]
# 
#         [terrain]
#             x,y=$x1,$y1 
#             terrain=Khr
#         [/terrain]
# 
#     [/event]
# 
#     [event]
#     name=moveto,unit placed
#     first_time_only=no 
# 
#         [filter]
#             race=orc,goblin,wolf,troll
#             [filter_location]
#                 terrain=Ke
#             [/filter_location]
#         [/filter]
# 
#         [sound]
#             name=cave-in.ogg
#         [/sound]
# 
#         [terrain]
#             x,y=$x1,$y1 
#             terrain=Ker
#         [/terrain]
#     [/event]
#enddef

#define LIGHT_SCHEDULE CURRENT_TIME
    {DAWN} {TOD_COLOR_SHIFT 0 0 0}
    {MORNING}
    {AFTERNOON} 
    {DUSK} {TOD_COLOR_SHIFT 0 0 0}
    {FIRST_WATCH} {TOD_COLOR_SHIFT 0 0 0}
    {SECOND_WATCH} {TOD_COLOR_SHIFT 0 0 0}
    current_time={CURRENT_TIME}
#enddef

#define AD_RECRUIT_EVENT 

[event]
name=prerecruit,prerecall
first_time_only=no 

    [filter]
        side=1 
    [/filter]

    [animate_unit]
        flag=leading 
        [filter]
            id=Bazur 
        [/filter] 
        [facing]
            x,y=$unit.x,$unit.y 
        [/facing]
    [/animate_unit]
[/event]

#enddef

#define AD_RECRUIT_EVENT_AI SIDE

[event]
name=recruit,recall
first_time_only=no 

    [filter]
        side={SIDE}
    [/filter]

    [animate_unit]
        flag=leading 
        [filter]
            side={SIDE}
            canrecruit=yes 
        [/filter] 
        [facing]
            x,y=$unit.x,$unit.y 
        [/facing]
    [/animate_unit]
[/event]

#enddef



    
        

  
